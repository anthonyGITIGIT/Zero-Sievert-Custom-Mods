# =============================================================================
# Immersive-Sounds-Doors â€” Building Entry/Exit SFX (base-anchored)
# Anchors to: gml_GlobalScript_player_step_misc_globals.gml
#   is_indoor = y > obj_map_generator.map_height;
# Uses only base-game APIs; plays custom .ogg via audio_create_stream.
# =============================================================================

# 1) Player parent Create: remember previous indoor state (instance var)
gml_Object_obj_player_parent_Create_0:
  - type: append
    code: |-
      // Track last indoor state for transition detection
      was_indoor = is_undefined(is_indoor) ? false : is_indoor;

# 2) Controller Create: load custom door sounds from mods/audio/building/*.ogg
gml_Object_obj_controller_Create_0:
  - type: append
    code: |-
      if (!variable_global_exists("building_enter_sound")) {
          if (file_exists("mods/audio/building/snd_building_enter.ogg")) {
              global.building_enter_sound = audio_create_stream("mods/audio/building/snd_building_enter.ogg");
          } else {
              global.building_enter_sound = -1;
          }
      }
      if (!variable_global_exists("building_exit_sound")) {
          if (file_exists("mods/audio/building/snd_building_exit.ogg")) {
              global.building_exit_sound = audio_create_stream("mods/audio/building/snd_building_exit.ogg");
          } else {
              global.building_exit_sound = -1;
          }
      }

# 3) Patch the exact indoor assignment in player_step_misc_globals to add SFX
#    Keeps the original logic; injects transition hook right after the assignment.
gml_GlobalScript_player_step_misc_globals:
  - type: findreplaceregex
    find: |-
      \bis\s*_\s*indoor\s*=\s*y\s*>\s*obj_map_generator\.map_height\s*;
    code: |-
      is_indoor = y > obj_map_generator.map_height;
      if (is_indoor && !was_indoor) {
          if (global.building_enter_sound != -1) {
              audio_play_sound(global.building_enter_sound, 10, false);
          }
      } else if (!is_indoor && was_indoor) {
          if (global.building_exit_sound != -1) {
              audio_play_sound(global.building_exit_sound, 10, false);
          }
      }
      was_indoor = is_indoor;

# 4) Cleanup: stop sounds on controller destruction (no destroy; base-safe)
gml_Object_obj_controller_CleanUp_0:
  - type: append
    code: |-
      if (variable_global_exists("building_enter_sound") && global.building_enter_sound != -1) {
          audio_stop_sound(global.building_enter_sound);
      }
      if (variable_global_exists("building_exit_sound") && global.building_exit_sound != -1) {
          audio_stop_sound(global.building_exit_sound);
      }
